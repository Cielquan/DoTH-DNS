version: '3.5'


networks:
  dns_network:
    name: dns_network
    driver: bridge
    driver_opts:
      encrypted: "true"
    ipam:
      config:
        - subnet: 172.16.1.0/24
    attachable: false


services:
  # DoH server container
  doh_server:
    container_name: doh_server
    hostname: ${HOSTNAME:-dns_server}
    image: cielquan/doh_server:latest
    environment:
      - TZ=${TIMEZONE:-Europe/Berlin}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: ./doh-docker/data/doh-server.conf
        target: /opt/dns-over-https/doh-server.conf
    expose:
      - "8053"
    networks:
      dns_network:
        ipv4_address: 172.16.1.2
    restart: always
    labels:
      - traefik.enable=true

      # DoH request handling
      - traefik.http.routers.DohServer.rule=Host(`doh.${DOMAIN}`) && Path(`/dns-query`)
      - traefik.http.routers.DohServer.middlewares=SecureHeaders
      - traefik.http.routers.DohServer.service=DohServer
      - traefik.http.services.DohServer.loadbalancer.server.port=8053


  # pihole container
  pihole:
    container_name: pihole
    hostname: ${HOSTNAME:-dns_server}
    depends_on:
      - unbound
    image: pihole/pihole:latest
    environment:
      - TZ=${TIMEZONE:-Europe/Berlin}
      - FTLCONF_REPLY_ADDR4=${HOST_IP}
      - PIHOLE_DNS_=172.16.1.4#53
      - WEBTHEME=default-darker
      - WEBPASSWORD=${PIHOLE_WEBPASSWORD}
      - DOMAIN=${DOMAIN}
      - HOST_IP=${HOST_IP}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: ./pihole-docker/data/resolv.conf
        target: /etc/resolv.conf
        read_only: true
      - type: bind
        source: ./pihole-docker/data/pihole/
        target: /etc/pihole/
      - type: bind
        source: ./pihole-docker/data/dnsmasq.d/
        target: /etc/dnsmasq.d/
      # s6 scripts
      - type: bind
        source: ./pihole-docker/scripts/s6_cont-init.d/01-conf-dnsmasq.sh
        target: /etc/cont-init.d/01-conf-dnsmasq.sh
    ports:
      - "53535:53/tcp"
      - "53535:53/udp"
    expose:
      - "80"
    networks:
      dns_network:
        ipv4_address: 172.16.1.3
    dns:
      - 127.0.0.1
    restart: always
    labels:
      - traefik.enable=true

      # Middleware to make sure /admin is at the start of the path for pihole dashboard
      - traefik.http.middlewares.AddAdminPath.replacepathregex.regex=^/((?i:(admin)/{0,1}|.{0})(.*))
      - traefik.http.middlewares.AddAdminPath.replacepathregex.replacement=/admin/$$3

      # pihole dashboard
      - traefik.http.routers.PiholeGui.rule=Host(`pihole.${DOMAIN}`)
      - traefik.http.routers.PiholeGui.middlewares=AddAdminPath,SecureHeaders
      - traefik.http.routers.PiholeGui.service=PiholeGui
      - traefik.http.services.PiholeGui.loadbalancer.server.port=80

      # DoT forward
      - traefik.tcp.routers.PiholeDot.rule=HostSNI(`dot.${DOMAIN}`)
      - traefik.tcp.routers.PiholeDot.entrypoints=dot
      - traefik.tcp.routers.PiholeDot.tls=true
      - traefik.tcp.routers.PiholeDot.tls.certresolver=leresolver
      - traefik.tcp.routers.PiholeDot.service=PiholeDns
      - traefik.tcp.services.PiholeDns.loadbalancer.server.port=53


  # unbound container
  unbound:
    container_name: unbound
    hostname: ${HOSTNAME:-dns_server}
    image: mvance/unbound:latest
    environment:
      - TZ=${TIMEZONE:-Europe/Berlin}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: ./unbound-docker/data
        target: /opt/unbound/etc/unbound/
      - type: bind
        source: ./unbound-docker/scripts/unbound.sh
        target: /unbound.sh
        read_only: true
    expose:
      - "53"
    networks:
      dns_network:
        ipv4_address: 172.16.1.4
    restart: always
    labels:
      - traefik.enable=false


  # tr√¶fik container
  traefik:
    container_name: traefik
    hostname: ${HOSTNAME:-dns_server}
    image: traefik:v3.0
    environment:
      - TZ=${TIMEZONE:-Europe/Berlin}
      - NAMECOM_API_TOKEN=${NAMECOM_API_TOKEN}
      - NAMECOM_USERNAME=${NAMECOM_USERNAME}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: ./traefik-docker/data/
        target: /etc/traefik/
        read_only: true
    ports:
      - "80:80"
      - "443:443"
      - "853:853"
    networks:
      dns_network:
        ipv4_address: 172.16.1.5
    restart: always
    command:
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"
      - "--log=true"
      - "--log.format=common"
      - "--log.level=INFO" # DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - "--accesslog=true"
      - "--accesslog.format=common"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.debug=false"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.network=dns_network"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure=true"
      - "--entryPoints.websecure.address=:443"
      - "--entrypoints.websecure.asdefault=true"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certResolver=leresolver"
      - "--entrypoints.dot=true"
      - "--entrypoints.dot.address=:853"
      ##############################
      # SSL CERTIFICATE CONFIG Start
      ##############################
      - "--certificatesresolvers.leresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.leresolver.acme.caserver=${ACME_CASERVER:-https://acme-v02.api.letsencrypt.org/directory}"
      - "--certificatesresolvers.leresolver.acme.dnschallenge=true"
      # Providers list: https://docs.traefik.io/https/acme/#providers
      - "--certificatesresolvers.leresolver.acme.dnschallenge.provider=${ACME_DNSCHALLENGE_PROVIDER:-namedotcom}"
      ##############################
      # SSL CERTIFICATE CONFIG End
      ##############################
    labels:
      - traefik.enable=true

      # Middleware to add security related headers
      - traefik.http.middlewares.SecHeadersSniff.headers.contenttypenosniff=true # buggy on traefik dashboard
      - traefik.http.middlewares.SecHeaders.headers.browserxssfilter=true
      - traefik.http.middlewares.SecHeaders.headers.framedeny=true
      - traefik.http.middlewares.SecHeaders.headers.forcestsheader=true
      - traefik.http.middlewares.SecHeaders.headers.stsincludesubdomains=true
      - traefik.http.middlewares.SecHeaders.headers.stspreload=true
      - traefik.http.middlewares.SecHeaders.headers.stsseconds=63072000
      - traefik.http.middlewares.SecureHeaders.chain.middlewares=SecHeaders,SecHeadersSniff
      - traefik.http.middlewares.SecureHeadersTraefik.chain.middlewares=SecHeaders

      # Middleware to add basic auth for traefik dashboard
      - traefik.http.middlewares.TraefikAuth.basicauth.usersfile=/etc/traefik/.htpasswd

      # traefik dashboard
      - traefik.http.routers.Traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.Traefik.middlewares=TraefikAuth,SecureHeadersTraefik
      - traefik.http.routers.Traefik.service=api@internal
