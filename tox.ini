# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.9
skip_missing_interpreters = True
#: Flag indicating to perform the packaging operation or not.
#: Set it to true when using tox for an application, instead of a library.
skipsdist = False
isolated_build = True
envlist =
    pre-commit
;    py3{8,7,6}
;    coverage
    package_description
    docs

[testenv:pre-commit]
description = format the code
passenv =
    SSH_AUTH_SOCK
    http_proxy
    https_proxy
    no_proxy
deps =
    {[testenv]deps}
    pylint >= 2.4, < 3
    mypy == 0.761
    pre-commit >= 2, < 3
extras =
    {[testenv]extras}
    docs
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'


[testenv:docs]
description = build and check docs with: sphinx
extras = docs
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Build for check and get all warnings
    sphinx-build -b html -b linkcheck -aEnq docs/source docs/build/html
    #: Build for success/fail status
    sphinx-build -b html -b linkcheck -aEnQW docs/source docs/build/html
    #: Output link to index.html
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "build" / "html" / "index.html"))'


[testenv:package_description]
description = check that the long description is valid
deps =
    {[testenv]deps}
    wheel
    twine >= 1.12.1
    readme-renderer >= 24.0
skip_install = true
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:dev]
description = create dev environment
deps =
    {[testenv]deps}
    mypy == 0.761
extras =
    testing
    docs
usedevelop = True
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"


# -- MYPY CONFIG -----------------------------------------------------------------------
[mypy]
warn_redundant_casts = True
warn_unused_configs = True


# -- ISORT CONFIG ----------------------------------------------------------------------
# [isort] in .isort.cfg | setup.cfg | tox.ini
# [tool:isort] in setup.cfg | tox.ini
# [tool.isort] in pyproject.toml
[isort]
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
known_first_party = dothdns,tests
known_third_party =click,docker,requests,setuptools,sphinx_rtd_theme,tzlocal
skip = venv


# -- FLAKE8 CONFIG ---------------------------------------------------------------------
# [flake8] in .flake8 | setup.cfg | tox.ini
[flake8]
count = True
statistics = True
exclude =
    .git
    __pycache__
    .tox
    venv
    *.egg
    build
extend-exclude = venv/ # flake8 >= 3.8.0 not released yet
extend-ignore = E203
max-line-length = 88
max-complexity = 20


# -- PYLINT CONFIG ---------------------------------------------------------------------
[pylint:MESSAGES CONTROL]
disable=
    C0330, # Indentation | deactivated for black
